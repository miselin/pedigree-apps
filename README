PEDIGREE-APPS README
====================

NOTE: Preliminary documentation, some features may not yet exist.

The purpose for the Pedigree-Apps subproject is mainly to provide a central
location for all files and folders relating to installable applications.

A cron job runs on this repository nightly, running any PKGBUILDs it finds
to add to the pedigree-project.org Pacman mirror.

If working on Pedigree, you can use this set of directories to populate your
images/<target arch>-elf directory with the set of applications you require
for your testing.

The layout of this repository is as follows:

+ packages
  - Actual package build scripts and patches. cd to a directory in here and run
    the relevant build.sh to build the package.
+ newpacks
  - Output from builds will go here, under an architecture-specific directory.
+ downloads
  - Download cache - delete a file if it exists here to force a reload on next
    build.
+ environment.sh
  - Environment configuration - compilers, paths, and flags. Modify but never
  - commit back to the repository.

When creating a package, your directory structure should reflect the following
outline (using lynx as an example):

- packages
  - lynx
    - package-info.sh
    - pre-build.sh
    - configure.sh
    - build.sh
    - install.sh
    - setupLinks.sh
    - patches
      - generic_patch1.diff
      - 2.8.7
        - version_specific_patch.diff

All listed shell scripts are optional. A full template for a package and its
scripts can be found in the 'package-template' directory - you should copy this
directory into the 'pacakges' with the name of your package at the beginning
of every new port.

If a package provides header files and/or libraries that will be used by a
later build (for example, libgmp providing headers and libraries for GCC), there
should be a setupLinks.sh script in the same directory as build.sh. Otherwise,
this file should be removed from the template for your package.

You should also modify the configure script lines to add/remove features for
your package, or replace the autoconf-specific call if your package doesn't use
autoconf.

The make and make install lines should be left as they are unless you
specifically need to build a given target. If your Makefile's install target
uses variable other than "DESTDIR" to specify the root for installing files to,
you should change the name of the variable to whatever your Makefile uses. If it
doesn't provide such a mechanism by default, you may need to provide a patch.

Patches can be in the main "patches" directory, where they will be applied to
all versions of the source code, or in a version subdirectory of the patches
directory. These are applied automatically with -p1 - keep that in mind when
generating diff files. All files in these directories use .diff extensions.

You should NEVER have source code in this repository. Every package should be
downloaded at runtime.

SUPPORT
====================

For support with the pedigree-apps repository either add a tracker item at
http://www.pedigree-project.org/projects/pedigree-apps or alternatively find
one of the developers in #pedigree on irc.freenode.net.

PUP: Package Updater for Pedigree
====================

PUP is the brand new, hand written and targeted package manager for Pedigree.

It's a WIP - more about it once it's ready to go!

